openapi: 3.0.0
info:
  title: Human Factors API
  version: 1.0.0
  description: REST API for team management, authentication, and human factors
servers:
  - url: https://your-api.com

paths:
  /login:
    post:
      summary: Log in
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  example: securePassword123
      responses:
        '200':
          description: Token JWT generado
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                  email:
                    type: string
                    example: user@example.com
                  role:
                    type: string
                    example: ROLE_USER

  /signup:
    post:
      summary: Register a new user
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  format: email
                  example: newuser@example.com
                password:
                  type: string
                  example: NewSecurePassword123
      responses:
        '200':
          description: User registered

  /user/password:
    put:
      summary: Change password
      tags: [User]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [oldPassword, newPassword]
              properties:
                oldPassword:
                  type: string
                  example: oldPassword123
                newPassword:
                  type: string
                  example: newPassword123
      responses:
        '200':
          description: Password updated

  /user/integration:
    get:
      summary: Check Slack integration
      tags: [User]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Boolean result of the integration
          content:
            application/json:
              schema:
                type: boolean
                example: true

  /teams:
    get:
      summary: Retrieve team information
      tags: [Team]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Team information
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  manager:
                    type: integer
                    example: 1
                  members:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 52
                        email:
                          type: string
                          format: email
                          example: mail@gmail.com
                        slackId:
                          type: string
                          nullable: true
                          example: null
                        team:
                          type: integer
                          example: 1
                  questionSendingTime:
                    type: string
                    example: "10:00"
                  questionsPerDay:
                    type: integer
                    example: 10
                  slackBotToken:
                    type: string
                    example: null
    post:
      summary: Add team member
      tags: [Team]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
              example: member@example.com
      responses:
        '200':
          description: Member added

  /teams/{email}:
    delete:
      summary: Remove team member
      tags: [Team]
      security:
        - bearerAuth: []
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
            format: email
      responses:
        '200':
          description: Member removed

  /teams/time:
    put:
      summary: Update question sending time
      tags: [Team]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
              example: "08:30"
      responses:
        '200':
          description: Time updated

  /teams/actions:
    get:
      summary: Get recommended actions
      tags: [Team]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of recommended actions
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    title:
                      type: string
                      example: Customer collaboration
                    score:
                      type: number
                      format: float
                      example: 1
                    description:
                      type: string
                      example: Conduct a one-on-one meeting

  /humanfactor:
    get:
      summary: Get all human factors
      tags: [Human Factors]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of all human factors
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 41
                    title:
                      type: string
                      example: Team autonomy
                    description:
                      type: string
                      example: ""
                    cluster:
                      type: string
                      example: MANAGEMENT
                    score:
                      type: number
                      format: float
                      example: 0.25
                    affectsTo:
                      type: array
                      items:
                        type: integer
                      example: [32]
                    affectedBy:
                      type: array
                      items:
                        type: integer
                      example: []
                    fullyMeasured:
                      type: boolean
                      example: false

  /humanfactor/{id}:
    get:
      summary: Get a specific human factor
      tags: [Human Factors]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Human factor details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 41
                  title:
                    type: string
                    example: Team autonomy
                  description:
                    type: string
                    example: ""
                  cluster:
                    type: string
                    example: MANAGEMENT
                  score:
                    type: number
                    format: float
                    example: 0.25
                  affectsTo:
                    type: array
                    items:
                      type: integer
                    example: [32]
                  affectedBy:
                    type: array
                    items:
                      type: integer
                    example: []
                  fullyMeasured:
                    type: boolean
                    example: false

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT